# This code was originally written by Josh Shapiro and Candace Savonen
# for the Childhood Cancer Data Lab, an initiative of Alexs Lemonade Stand Foundation.
# https://github.com/AlexsLemonade/refinebio-examples/blob/33cdeff66d57f9fe8ee4fcb5156aea4ac2dce07f/.github/workflows/style-and-sp-check.yml#L1
# It was adapted by Candace Savonen for the OTTR_template https://github.com/jhudsl/OTTR_Template.
# This code was adapted by Carrie Wright and Ava Hoffman to enable automated rendering of the site associated with this repository

name: Render html

# Controls when the action will run. Triggers the workflow on push
on:
  workflow_dispatch:
  push:
    branches: [ main, staging ]
    paths:
      - '**.Rmd'
      - 'styles.css'
      - '_site.yml'
      - 'Assignments/*.Rmd'
      - 'site_libs/*'
      - '**.md'

jobs:

  render-main:
    name: Render Main Site and Materials
    runs-on: ubuntu-latest
    container:
      image: jhudsl/intro_to_r:1.1
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Give permission to access the repo
      - name: safelist repository
        run: |
          repo_name='${{ github.event.repository.name }}'
          git config --global --add safe.directory /__w/$repo_name/$repo_name
    
      # # Checks-out your repository with the token so your job can access it
      - name: checkout
        uses: actions/checkout@v3
        with:
          # get the full repo
          fetch-depth: 0
          # use github PAT
          token: ${{ secrets.GH_PAT }}

      # We want a fresh run of the renders each time - so first delete old html files
      - name: Delete old *.html
        run: Rscript -e "rmarkdown::clean_site(preview = FALSE)"
        
       # Now we want to render all the html files from the Rmd files
      - name: Run render html for the main site
        id: site
        run: Rscript -e "rmarkdown::render_site()" 
        
      - name: Render assignments
        id: assignments
        run: Rscript -e "for (i in list.files(path = './Assignments', pattern = 'Rmd$', recursive = FALSE, full.names = TRUE)){rmarkdown::render(i)}"

      # This checks on the steps before it and makes sure that they completed.
      # If the renders didn't complete we don't want to commit the file changes
      - name: Check on render steps
        if: steps.site.outcome != 'success'
        run: |
          echo site status ${{steps.site.outcome}}
          exit 1

      # Commit the rendered site files - html files and site_libs files
      - name: Commit rendered site files
        run: |
          git config --local user.email "itcrtrainingnetwork@gmail.com"
          git config --local user.name "jhudsl-robot"
          git add . --force
          git commit -m 'Render site' || echo "No changes to commit"
          git pull --set-upstream origin main --allow-unrelated-histories --strategy-option=ours
          git push origin main || echo "No changes to push"
